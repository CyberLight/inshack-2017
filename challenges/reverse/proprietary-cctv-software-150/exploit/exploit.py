#!/usr/bin/python3
import re, random, hashlib, requests, os

testing = False
zip_url = "https://drive.google.com/uc?export=download&id=0BzPQ2skYzQgeemxrNWRiR3lmd2c"
charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
print_key = False

def decompose(target):
    d = []
    left = target
    for i in range(0,5):
        choice = random.randrange(0,2)
        if left == 0 or choice == 0:
            d.append(0)
        elif left % 2 == 0:
            v = int(left/2)
            d.append(v)
            left = v
        else:
            d.append(1)
            left -= 1
    d.append(left)
    return d


def generate_block(target):
    block = ''
    d = sorted(decompose(target))
    for k in range(1,len(d)+1):
        block += charset[d[k-1]+k]
    return block


def alive():
    if testing:
        with open(os.path.dirname(__file__) + '/../public-files/cctv_soft.zip', 'rb') as f:
            content = f.read()
    else:
        response = requests.get(zip_url)
        content = response.content
    md5_returned = hashlib.md5(content).hexdigest()
    if md5_returned != "b6dd6356fd8812d0af25681aa29611f7":
        return content, False
    return content, True


def exploitable():
    blocks = []
    for m in [ 30, 24, 18, 12, 6, 0 ]:
        blocks.append(generate_block(m))
    if print_key:
        print('-'.join(blocks))
    return True

if __name__ == "__main__":
    print(alive() and exploitable())
