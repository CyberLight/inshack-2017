#!/usr/bin/python3
import re, base64, hashlib, requests, os

pcap_url = "https://ctf.insecurity-insa.fr/media/....."
testing = True


def alive():
    if testing:
        with open(os.path.dirname(__file__) + '/../public-files/remote-media-controler.pcap', 'rb') as f:
            content = f.read()
    else:
        response = requests.get(pcap_url)
        content = response.content

    md5_returned = hashlib.md5(content).hexdigest()
    if md5_returned != "35f5b51da30c8a4cdad9fcc1d34a88ab":
        return content, False
    return content, True


def exploitable(content):
    # CF ../writeup.md for explanation
    words = re.compile(b'[\w\+=/]+').findall(content)
    biggest_word = ""
    for w in words:
        if len(w) > len(biggest_word):
            biggest_word = w
    biggest_word = biggest_word.decode("utf-8")
    with open(os.path.dirname(__file__) + '/../flag.txt') as f:
        flag = f.read()
    for _ in range(10):
        biggest_word = base64.b64decode(biggest_word).decode('utf-8')
        if flag in biggest_word:
            return True
    return False


if __name__ == "__main__":
    content, is_alive = alive()
    print(is_alive and exploitable(content))
